name: Build and Deploy Code

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: 
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-22.04
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: install python3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run tests
        run: |
          pip install pytest
          pytest

      # - name: login to docker hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: set up docker buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-course:latest
  
  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd /app/src
            git pull
            echo ${{ secrets.PROD_PASSWORD }} | sudo -S docker-compose up -d
